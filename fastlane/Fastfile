# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.7.3"

before_all do
  # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."

  # cocoapods

  # increment_build_number


  # xctool # run the tests of your app
end

desc "Runs all the tests"
lane :test do
  # snapshot
end

desc "Submit a new Beta Build to Crashlytics"
desc "This will also make sure the profile is up to date"
lane :beta do
  # Make sure we start off with a clean slate
  ensure_git_status_clean

  # Increment build number to current date
  # build_number = Time.new.strftime("%Y.%m.%d")
  # increment_build_number build_number: build_number
  #
  # Enable automat versioning in Xcode
  # https://developer.apple.com/library/ios/qa/qa1827/_index.html
  increment_build_number

  # snapshot
  sigh

  # Build your app - more options available
  ipa(
    configuration: "Release",
    clean: false
  )

  # distribute beta
  crashlytics(
    crashlytics_path: '/Developer/TestFastlaneTools/Pods/Crashlytics/Crashlytics.framework', # path to your 'Crashlytics.framework'
    api_token: '55c38003fe168a16c9624d18feed343b7867318d',
    build_secret: '90f75fd7ab4ee2fafbecdf583f7d811bf68a67c513c7a042a20088404119362e',
    ipa_path: ENV['IPA_OUTPUT_PATH']
  )

  # Make sure our directory is clean, except for changes Fastlane has made
  clean_build_artifacts

  # Tag release and push to GitHub
  commit_version_bump force: true
  push_to_git_remote
end


after_all do |lane|
  notify "Fastlane finished '#{lane}'" # Mac OS X Notification
end

error do |lane, exception|
  # slack(
  #   message: exception.message,
  #   success: false
  # )
end


# More information about multiple platforms in fastlane: 
# https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
